version = "1.2.0"
description = "Hardware in OCaml"
requires = "bytes bigarray num astring"
archive(byte) = "HardCaml.cma"
archive(byte, plugin) = "HardCaml.cma"
archive(native) = "HardCaml.cmxa"
archive(native, plugin) = "HardCaml.cmxs"
exists_if = "HardCaml.cma"

package "syntax" (
 version = "1.2.0"
 description = "Hardware in OCaml - syntax extension"
 requires = "camlp4"
 archive(syntax, preprocessor) = "pa_hardcaml.cmo"
 archive(syntax, toploop) = "pa_hardcaml.cmo"
 requires(toploop) = "hardcaml"
 exists_if = "pa_hardcaml.cmo"
)

package "js" (
 version = "1.2.0"
 description = "Hardware in OCaml - js_of_ocaml APIs"
 requires = "hardcaml lwt js_of_ocaml"
 archive(byte) = "HardCamlJS.cma"
 archive(byte, plugin) = "HardCamlJS.cma"
 archive(native) = "HardCamlJS.cmxa"
 archive(native, plugin) = "HardCamlJS.cmxs"
 exists_if = "HardCamlJS.cma"
)

package "dynlink" (
 version = "1.2.0"
 description = "Hardware in OCaml - dynamic simulator loading"
 requires = "hardcaml dynlink"
 archive(byte) = "HardCamlDynlink.cma"
 archive(byte, plugin) = "HardCamlDynlink.cma"
 archive(native) = "HardCamlDynlink.cmxa"
 archive(native, plugin) = "HardCamlDynlink.cmxs"
 exists_if = "HardCamlDynlink.cma"
)

package "csim" (
 version = "1.2.0"
 description = "Hardware in OCaml - C based simulation"
 requires = "hardcaml ctypes.foreign"
 archive(byte) = "HardCamlCSim.cma"
 archive(byte, plugin) = "HardCamlCSim.cma"
 archive(native) = "HardCamlCSim.cmxa"
 archive(native, plugin) = "HardCamlCSim.cmxs"
 exists_if = "HardCamlCSim.cma"
)

